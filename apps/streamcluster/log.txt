ANALYZING FUNCTIONS FOR PRECISE-PURITY:
-----
checking function __cxx_global_var_init at /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/iostream:73
 - blockers: 2
   * /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/iostream:73: call to std::ios_base::Init::Init()
   * /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/iostream:73: call to atexit()
 - precise-impure function: __cxx_global_var_init
-----
checking function accept_roi_begin at acceptrt.default.c:8
 - blockers: 2
   * acceptrt.default.c:10: call to gettimeofday()
   * acceptrt.default.c:11: store to time_begin
 - precise-impure function: accept_roi_begin
-----
checking function accept_roi_end at acceptrt.default.c:14
 - blockers: 4
   * acceptrt.default.c:16: call to gettimeofday()
   * acceptrt.default.c:20: call to fopen()
   * acceptrt.default.c:21: call to fprintf()
   * acceptrt.default.c:22: call to fclose()
 - precise-impure function: accept_roi_end
-----
checking function Not_Implemented(char const*, char const*, unsigned int) at parsec_barrier.cpp:33
 - blockers: 2
   * parsec_barrier.cpp:34: call to fprintf()
   * parsec_barrier.cpp:35: call to exit()
 - precise-impure function: Not_Implemented(char const*, char const*, unsigned int)
-----
checking function parsec_barrier_init(parsec_barrier_t*, int const*, unsigned int) at parsec_barrier.cpp:50
 - blockers: 6
   * parsec_barrier.cpp:69: call to Not_Implemented(char const*, char const*, unsigned int)
   * parsec_barrier.cpp:71: store to max
   * parsec_barrier.cpp:72: store to n
   * parsec_barrier.cpp:73: store to is_arrival_phase
   * parsec_barrier.cpp:75: call to pthread_mutex_init()
   * parsec_barrier.cpp:77: call to pthread_cond_init()
 - precise-impure function: parsec_barrier_init(parsec_barrier_t*, int const*, unsigned int)
-----
checking function parsec_barrier_destroy(parsec_barrier_t*) at parsec_barrier.cpp:81
 - blockers: 3
   * parsec_barrier.cpp:84: call to __assert_fail
   * parsec_barrier.cpp:86: call to pthread_mutex_destroy()
   * parsec_barrier.cpp:88: call to pthread_cond_destroy()
 - precise-impure function: parsec_barrier_destroy(parsec_barrier_t*)
-----
checking function parsec_barrierattr_getpshared(int const*, int*) at parsec_barrier.cpp:111
 - blockers: 1
   * parsec_barrier.cpp:113: store to intermediate:  store i32 %3, i32* %4, align 4, !dbg !1237, !quals !2
 - precise-impure function: parsec_barrierattr_getpshared(int const*, int*)
-----
checking function parsec_barrierattr_setpshared(int*, int) at parsec_barrier.cpp:117
 - blockers: 2
   * parsec_barrier.cpp:121: call to Not_Implemented(char const*, char const*, unsigned int)
   * parsec_barrier.cpp:122: store to intermediate:  store i32 %4, i32* %5, align 4, !dbg !1239, !quals !2
 - precise-impure function: parsec_barrierattr_setpshared(int*, int)
-----
checking function parsec_barrier_wait(parsec_barrier_t*) at parsec_barrier.cpp:127
 - blockers: 15
   * (app_all.bc):0: store to barrier.addr
   * parsec_barrier.cpp:152: call to pthread_mutex_trylock()
   * parsec_barrier.cpp:157: call to pthread_cond_wait()
   * parsec_barrier.cpp:159: call to pthread_mutex_unlock()
   * parsec_barrier.cpp:168: store to n33
   * parsec_barrier.cpp:172: store to is_arrival_phase38
   * parsec_barrier.cpp:173: call to pthread_cond_broadcast()
   * parsec_barrier.cpp:182: call to pthread_mutex_unlock()
   * parsec_barrier.cpp:185: call to pthread_mutex_trylock()
   * parsec_barrier.cpp:190: call to pthread_cond_wait()
   * parsec_barrier.cpp:192: call to pthread_mutex_unlock()
   * parsec_barrier.cpp:199: store to n80
   * parsec_barrier.cpp:202: store to is_arrival_phase84
   * parsec_barrier.cpp:203: call to pthread_cond_broadcast()
   * parsec_barrier.cpp:205: call to pthread_mutex_unlock()
 - precise-impure function: parsec_barrier_wait(parsec_barrier_t*)
-----
checking function global constructors keyed to a at streamcluster.cpp:67
 - blockers: 1
   * streamcluster.cpp:67: call to __cxx_global_var_init
 - precise-impure function: global constructors keyed to a
-----
checking function __dtor__ZStL8__ioinit at streamcluster.cpp:73
 - blockers: 1
   * streamcluster.cpp:73: call to std::ios_base::Init::~Init()
 - precise-impure function: __dtor__ZStL8__ioinit
-----
checking function shuffle(Points*) at streamcluster.cpp:104
 - blockers: 4
   * streamcluster.cpp:109: call to lrand48()
   * streamcluster.cpp:110: call to llvm.memcpy.p0i8.p0i8.i64()
   * streamcluster.cpp:111: call to llvm.memcpy.p0i8.p0i8.i64()
   * streamcluster.cpp:112: call to llvm.memcpy.p0i8.p0i8.i64()
 - precise-impure function: shuffle(Points*)
-----
checking function intshuffle(int*, int) at streamcluster.cpp:117
 - blockers: 3
   * streamcluster.cpp:122: call to lrand48()
   * streamcluster.cpp:124: store to arrayidx3
   * streamcluster.cpp:125: store to arrayidx4
 - precise-impure function: intshuffle(int*, int)
-----
checking function pspeedy(Points*, float, long*, int, parsec_barrier_t*) at streamcluster.cpp:140
 - blockers: 27
   * (app_all.bc):0: store to points.addr
   * streamcluster.cpp:143: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:166: store to assign
   * streamcluster.cpp:170: store to intermediate:  store i64 1, i64* %35, align 8, !dbg !1259, !quals !2
   * streamcluster.cpp:171: call to malloc()
   * streamcluster.cpp:171: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::costs
   * streamcluster.cpp:178: call to pthread_cond_wait()
   * streamcluster.cpp:188: store to assign77
   * streamcluster.cpp:192: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:193: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:198: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::i
   * streamcluster.cpp:198: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::i
   * streamcluster.cpp:199: call to lrand48()
   * streamcluster.cpp:201: store to intermediate:  store i64 %inc102, i64* %87, align 8, !dbg !1294, !quals !2
   * streamcluster.cpp:205: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
   * streamcluster.cpp:208: call to pthread_cond_broadcast()
   * streamcluster.cpp:214: store to assign146
   * streamcluster.cpp:218: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:220: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
   * streamcluster.cpp:222: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:229: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
   * streamcluster.cpp:232: call to pthread_cond_broadcast()
   * streamcluster.cpp:236: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:238: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
   * streamcluster.cpp:245: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:255: call to free()
   * streamcluster.cpp:258: call to parsec_barrier_wait(parsec_barrier_t*)
 - precise-impure function: pspeedy(Points*, float, long*, int, parsec_barrier_t*)
-----
checking function pgain(long, Points*, double, long*, int, parsec_barrier_t*) at streamcluster.cpp:284
 - blockers: 16
   * streamcluster.cpp:288: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:305: store to stride
   * streamcluster.cpp:309: store to stride
   * streamcluster.cpp:317: call to malloc()
   * streamcluster.cpp:317: store to pgain(long, Points*, double, long*, int, parsec_barrier_t*)::work_mem
   * streamcluster.cpp:323: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:340: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:353: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:368: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:405: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:434: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:447: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:461: store to assign265
   * streamcluster.cpp:474: store to intermediate:  store i64 %sub303, i64* %247, align 8, !dbg !1402, !quals !2
   * streamcluster.cpp:482: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:485: call to free()
 - precise-impure function: pgain(long, Points*, double, long*, int, parsec_barrier_t*)
-----
checking function pFL(Points*, int*, int, float, long*, double, long, float, int, parsec_barrier_t*) at streamcluster.cpp:505
 - blockers: 5
   * streamcluster.cpp:510: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:527: call to intshuffle(int*, int)
   * streamcluster.cpp:530: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:537: call to pgain(long, Points*, double, long*, int, parsec_barrier_t*)
   * streamcluster.cpp:542: call to parsec_barrier_wait(parsec_barrier_t*)
 - precise-impure function: pFL(Points*, int*, int, float, long*, double, long, float, int, parsec_barrier_t*)
-----
checking function selectfeasible_fast(Points*, int**, int, int, parsec_barrier_t*) at streamcluster.cpp:551
 - blockers: 8
   * streamcluster.cpp:556: call to malloc()
   * streamcluster.cpp:556: store to intermediate:  store i32* %8, i32** %9, align 8, !dbg !1245, !quals !2
   * streamcluster.cpp:580: store to arrayidx
   * streamcluster.cpp:583: call to malloc()
   * streamcluster.cpp:593: call to lrand48()
   * streamcluster.cpp:598: store to arrayidx64
   * streamcluster.cpp:610: store to arrayidx77
   * streamcluster.cpp:613: call to free()
 - precise-impure function: selectfeasible_fast(Points*, int**, int, int, parsec_barrier_t*)
-----
checking function pkmedian(Points*, long, long, long*, int, parsec_barrier_t*) at streamcluster.cpp:622
 - blockers: 22
   * (app_all.bc):0: store to points.addr
   * streamcluster.cpp:635: call to calloc()
   * streamcluster.cpp:635: store to pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)::hizs
   * streamcluster.cpp:647: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:658: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:670: store to assign
   * streamcluster.cpp:675: call to free()
   * streamcluster.cpp:676: store to intermediate:  store i64 %64, i64* %65, align 8, !dbg !1297, !quals !2
   * streamcluster.cpp:681: call to shuffle(Points*)
   * streamcluster.cpp:682: call to pspeedy(Points*, float, long*, int, parsec_barrier_t*)
   * streamcluster.cpp:687: call to pspeedy(Points*, float, long*, int, parsec_barrier_t*)
   * streamcluster.cpp:694: call to shuffle(Points*)
   * streamcluster.cpp:695: call to pspeedy(Points*, float, long*, int, parsec_barrier_t*)
   * streamcluster.cpp:706: call to selectfeasible_fast(Points*, int**, int, int, parsec_barrier_t*)
   * streamcluster.cpp:706: store to pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)::numfeasible
   * streamcluster.cpp:713: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:720: call to pFL(Points*, int*, int, float, long*, double, long, float, int, parsec_barrier_t*)
   * streamcluster.cpp:729: call to pFL(Points*, int*, int, float, long*, double, long, float, int, parsec_barrier_t*)
   * streamcluster.cpp:752: call to parsec_barrier_wait(parsec_barrier_t*)
   * streamcluster.cpp:758: call to free()
   * streamcluster.cpp:759: call to free()
   * streamcluster.cpp:760: store to intermediate:  store i64 %167, i64* %168, align 8, !dbg !1357, !quals !2
 - precise-impure function: pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
-----
checking function copycenters(Points*, Points*, long*, long) at streamcluster.cpp:794
 - blockers: 5
   * streamcluster.cpp:799: call to calloc()
   * streamcluster.cpp:803: store to arrayidx2
   * streamcluster.cpp:813: store to arrayidx19
   * streamcluster.cpp:818: store to num24
   * streamcluster.cpp:820: call to free()
 - precise-impure function: copycenters(Points*, Points*, long*, long)
-----
checking function localSearchSub(void*) at streamcluster.cpp:833
 - blockers: 1
   * streamcluster.cpp:836: call to pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
 - precise-impure function: localSearchSub(void*)
-----
checking function localSearch(Points*, long, long, long*) at streamcluster.cpp:842
 - blockers: 14
   * streamcluster.cpp:844: call to operator new[](unsigned long)
   * streamcluster.cpp:845: call to operator new[](unsigned long)
   * streamcluster.cpp:848: call to parsec_barrier_init(parsec_barrier_t*, int const*, unsigned int)
   * streamcluster.cpp:851: store to points3
   * streamcluster.cpp:852: store to kmin6
   * streamcluster.cpp:853: store to kmax9
   * streamcluster.cpp:854: store to pid
   * streamcluster.cpp:855: store to kfinal14
   * streamcluster.cpp:857: store to barrier17
   * streamcluster.cpp:859: call to pthread_create()
   * streamcluster.cpp:867: call to pthread_join()
   * streamcluster.cpp:871: call to operator delete[](void*)
   * streamcluster.cpp:872: call to operator delete[](void*)
   * streamcluster.cpp:874: call to parsec_barrier_destroy(parsec_barrier_t*)
 - precise-impure function: localSearch(Points*, long, long, long*)
-----
checking function PStream::PStream() at streamcluster.cpp:879
 - blockers: 1
   * streamcluster.cpp:879: store to intermediate:  store i8** getelementptr inbounds ([7 x i8*]* @vtable for PStream, i64 0, i64 2), i8*** %0, !dbg !1233
 - precise-impure function: PStream::PStream()
-----
checking function PStream::~PStream() at streamcluster.cpp:884
 - blockers: 2
   * streamcluster.cpp:884: call to operator delete(void*)
   * streamcluster.cpp:884: call to operator delete(void*)
 - precise-impure function: PStream::~PStream()
-----
checking function SimStream::SimStream(long) at streamcluster.cpp:891
 - blockers: 3
   * streamcluster.cpp:891: call to PStream::PStream()
   * streamcluster.cpp:891: store to intermediate:  store i8** getelementptr inbounds ([7 x i8*]* @vtable for SimStream, i64 0, i64 2), i8*** %1, !dbg !1234
   * streamcluster.cpp:892: store to n
 - precise-impure function: SimStream::SimStream(long)
-----
checking function SimStream::SimStream(long) at streamcluster.cpp:891
 - blockers: 1
   * streamcluster.cpp:893: call to SimStream::SimStream(long)
 - precise-impure function: SimStream::SimStream(long)
-----
checking function SimStream::read(float*, int, int) at streamcluster.cpp:894
 - blockers: 2
   * streamcluster.cpp:898: call to lrand48()
   * streamcluster.cpp:900: store to n6
 - precise-impure function: SimStream::read(float*, int, int)
-----
checking function SimStream::~SimStream() at streamcluster.cpp:911
 - blockers: 2
   * streamcluster.cpp:911: call to operator delete(void*)
   * streamcluster.cpp:911: call to operator delete(void*)
 - precise-impure function: SimStream::~SimStream()
-----
checking function FileStream::FileStream(char*) at streamcluster.cpp:919
 - blockers: 7
   * streamcluster.cpp:919: call to PStream::PStream()
   * streamcluster.cpp:919: store to intermediate:  store i8** getelementptr inbounds ([7 x i8*]* @vtable for FileStream, i64 0, i64 2), i8*** %1, !dbg !1234
   * streamcluster.cpp:920: call to fopen()
   * streamcluster.cpp:920: store to fp
   * streamcluster.cpp:922: call to fprintf()
   * streamcluster.cpp:923: call to exit()
   * streamcluster.cpp:925: call to std::terminate()
 - precise-impure function: FileStream::FileStream(char*)
-----
checking function FileStream::FileStream(char*) at streamcluster.cpp:919
 - blockers: 1
   * streamcluster.cpp:925: call to FileStream::FileStream(char*)
 - precise-impure function: FileStream::FileStream(char*)
-----
checking function FileStream::read(float*, int, int) at streamcluster.cpp:926
 - blockers: 1
   * streamcluster.cpp:927: call to fread()
 - precise-impure function: FileStream::read(float*, int, int)
-----
checking function FileStream::ferror() at streamcluster.cpp:929
 - blockers: 1
   * streamcluster.cpp:930: call to ferror()
 - precise-impure function: FileStream::ferror()
-----
checking function FileStream::feof() at streamcluster.cpp:932
 - blockers: 1
   * streamcluster.cpp:933: call to feof()
 - precise-impure function: FileStream::feof()
-----
checking function FileStream::~FileStream() at streamcluster.cpp:935
 - blockers: 4
   * streamcluster.cpp:935: store to intermediate:  store i8** getelementptr inbounds ([7 x i8*]* @vtable for FileStream, i64 0, i64 2), i8*** %0, !dbg !1234
   * streamcluster.cpp:936: call to fprintf()
   * streamcluster.cpp:937: call to fclose()
   * streamcluster.cpp:938: call to std::terminate()
 - precise-impure function: FileStream::~FileStream()
-----
checking function FileStream::~FileStream() at streamcluster.cpp:935
 - blockers: 1
   * streamcluster.cpp:935: call to FileStream::~FileStream()
 - precise-impure function: FileStream::~FileStream()
-----
checking function FileStream::~FileStream() at streamcluster.cpp:935
 - blockers: 3
   * streamcluster.cpp:935: call to FileStream::~FileStream()
   * streamcluster.cpp:935: call to operator delete(void*)
   * streamcluster.cpp:935: call to operator delete(void*)
 - precise-impure function: FileStream::~FileStream()
-----
checking function outcenterIDs(Points*, long*, char*) at streamcluster.cpp:943
 - blockers: 10
   * streamcluster.cpp:944: call to fopen()
   * streamcluster.cpp:946: call to fprintf()
   * streamcluster.cpp:947: call to exit()
   * streamcluster.cpp:949: call to calloc()
   * streamcluster.cpp:951: store to arrayidx5
   * streamcluster.cpp:956: call to fprintf()
   * streamcluster.cpp:957: call to fprintf()
   * streamcluster.cpp:959: call to fprintf()
   * streamcluster.cpp:961: call to fprintf()
   * streamcluster.cpp:964: call to fclose()
 - precise-impure function: outcenterIDs(Points*, long*, char*)
-----
checking function streamCluster(PStream*, long, long, int, long, long, char*) at streamcluster.cpp:967
 - blockers: 44
   * streamcluster.cpp:972: call to malloc()
   * streamcluster.cpp:973: call to malloc()
   * streamcluster.cpp:974: call to malloc()
   * streamcluster.cpp:977: call to fprintf()
   * streamcluster.cpp:978: call to exit()
   * streamcluster.cpp:982: store to dim11
   * streamcluster.cpp:983: store to num
   * streamcluster.cpp:985: call to malloc()
   * streamcluster.cpp:985: store to p
   * streamcluster.cpp:988: store to coord
   * streamcluster.cpp:992: store to dim20
   * streamcluster.cpp:994: call to malloc()
   * streamcluster.cpp:994: store to p23
   * streamcluster.cpp:995: store to num24
   * streamcluster.cpp:998: store to coord36
   * streamcluster.cpp:1006: indirect function call
   * streamcluster.cpp:1007: call to fprintf()
   * streamcluster.cpp:1009: indirect function call
   * streamcluster.cpp:1009: indirect function call
   * streamcluster.cpp:1010: call to fprintf()
   * streamcluster.cpp:1011: call to exit()
   * streamcluster.cpp:1014: store to num59
   * streamcluster.cpp:1019: call to malloc()
   * streamcluster.cpp:1019: store to switch_membership
   * streamcluster.cpp:1020: call to calloc()
   * streamcluster.cpp:1020: store to is_center
   * streamcluster.cpp:1021: call to malloc()
   * streamcluster.cpp:1021: store to center_table
   * streamcluster.cpp:1027: call to localSearch(Points*, long, long, long*)
   * streamcluster.cpp:1033: call to fprintf()
   * streamcluster.cpp:1034: call to exit()
   * streamcluster.cpp:1037: call to copycenters(Points*, Points*, long*, long)
   * streamcluster.cpp:1040: call to free()
   * streamcluster.cpp:1041: call to free()
   * streamcluster.cpp:1042: call to free()
   * streamcluster.cpp:1044: indirect function call
   * streamcluster.cpp:1050: call to malloc()
   * streamcluster.cpp:1050: store to switch_membership
   * streamcluster.cpp:1051: call to calloc()
   * streamcluster.cpp:1051: store to is_center
   * streamcluster.cpp:1052: call to malloc()
   * streamcluster.cpp:1052: store to center_table
   * streamcluster.cpp:1054: call to localSearch(Points*, long, long, long*)
   * streamcluster.cpp:1056: call to outcenterIDs(Points*, long*, char*)
 - precise-impure function: streamCluster(PStream*, long, long, int, long, long, char*)
-----
checking function main at streamcluster.cpp:1059
 - blockers: 31
   * streamcluster.cpp:1061: call to operator new[](unsigned long)
   * streamcluster.cpp:1062: call to operator new[](unsigned long)
   * streamcluster.cpp:1072: call to fprintf()
   * streamcluster.cpp:1073: call to fflush()
   * streamcluster.cpp:1080: call to fprintf()
   * streamcluster.cpp:1082: call to fprintf()
   * streamcluster.cpp:1083: call to fprintf()
   * streamcluster.cpp:1084: call to fprintf()
   * streamcluster.cpp:1085: call to fprintf()
   * streamcluster.cpp:1086: call to fprintf()
   * streamcluster.cpp:1087: call to fprintf()
   * streamcluster.cpp:1088: call to fprintf()
   * streamcluster.cpp:1089: call to fprintf()
   * streamcluster.cpp:1090: call to fprintf()
   * streamcluster.cpp:1091: call to fprintf()
   * streamcluster.cpp:1092: call to fprintf()
   * streamcluster.cpp:1093: call to exit()
   * streamcluster.cpp:1104: call to strcpy()
   * streamcluster.cpp:1105: call to strcpy()
   * streamcluster.cpp:1106: store to nproc
   * streamcluster.cpp:1111: call to srand48()
   * streamcluster.cpp:1114: call to operator new(unsigned long)
   * streamcluster.cpp:1114: call to SimStream::SimStream(long)
   * streamcluster.cpp:1114: call to operator delete(void*)
   * streamcluster.cpp:1117: call to operator new(unsigned long)
   * streamcluster.cpp:1117: call to FileStream::FileStream(char*)
   * streamcluster.cpp:1117: call to operator delete(void*)
   * streamcluster.cpp:1124: call to accept_roi_begin()
   * streamcluster.cpp:1126: call to streamCluster(PStream*, long, long, int, long, long, char*)
   * streamcluster.cpp:1131: call to accept_roi_end()
   * streamcluster.cpp:1133: indirect function call
 - precise-impure function: main
----------
checking function fprintf
 - definition not available
-----
checking function exit
 - definition not available
-----
checking function pthread_mutex_init
 - definition not available
-----
checking function pthread_cond_init
 - definition not available
-----
checking function __assert_fail
 - definition not available
-----
checking function pthread_mutex_destroy
 - definition not available
-----
checking function pthread_cond_destroy
 - definition not available
-----
checking function pthread_mutex_lock
 - definition not available
-----
checking function pthread_mutex_unlock
 - definition not available
-----
checking function pthread_mutex_trylock
 - definition not available
-----
checking function pthread_cond_wait
 - definition not available
-----
checking function pthread_cond_broadcast
 - definition not available
-----
checking function std::ios_base::Init::Init()
 - definition not available
-----
checking function atexit
 - definition not available
-----
checking function std::ios_base::Init::~Init()
 - definition not available
-----
checking function lrand48
 - definition not available
-----
checking function llvm.memcpy.p0i8.p0i8.i64
 - definition not available
-----
checking function malloc
 - definition not available
-----
checking function free
 - definition not available
-----
checking function llvm.memset.p0i8.i64
 - definition not available
-----
checking function calloc
 - definition not available
-----
checking function operator new[](unsigned long)
 - definition not available
-----
checking function pthread_create
 - definition not available
-----
checking function pthread_join
 - definition not available
-----
checking function operator delete[](void*)
 - definition not available
-----
checking function fopen
 - definition not available
-----
checking function fclose
 - definition not available
-----
checking function fflush
 - definition not available
-----
checking function strcpy
 - definition not available
-----
checking function srand48
 - definition not available
-----
checking function operator new(unsigned long)
 - definition not available
-----
checking function operator delete(void*)
 - definition not available
-----
checking function std::terminate()
 - definition not available
-----
checking function gettimeofday
 - definition not available
-----
checking function __gxx_personality_v0
 - definition not available
-----
checking function fread
 - definition not available
-----
checking function ferror
 - definition not available
-----
checking function feof
 - definition not available
-----
checking function __cxa_pure_virtual
 - definition not available
-----
checking function log
 - whitelisted
-----
checking function llvm.dbg.declare
 - only reads memory
-----
checking function llvm.umul.with.overflow.i64
 - only reads memory
-----
checking function atoi
 - only reads memory
-----
checking function parsec_barrierattr_destroy(int*) at parsec_barrier.cpp:98
 - blockers: 0
 - precise-pure function: parsec_barrierattr_destroy(int*)
-----
checking function parsec_barrierattr_init(int*) at parsec_barrier.cpp:104
 - blockers: 0
 - precise-pure function: parsec_barrierattr_init(int*)
-----
checking function isIdentical(float*, float*, int) at streamcluster.cpp:77
 - blockers: 0
 - precise-pure function: isIdentical(float*, float*, int)
-----
checking function dist(Point const&, Point const&, int) at streamcluster.cpp:130
 - blockers: 0
 - precise-pure function: dist(Point const&, Point const&, int)
-----
checking function contcenters(Points*) at streamcluster.cpp:771
 - blockers: 0
 - precise-pure function: contcenters(Points*)
-----
checking function PStream::~PStream() at streamcluster.cpp:884
 - blockers: 0
 - precise-pure function: PStream::~PStream()
-----
checking function PStream::~PStream() at streamcluster.cpp:884
 - blockers: 0
 - precise-pure function: PStream::~PStream()
-----
checking function SimStream::ferror() at streamcluster.cpp:905
 - blockers: 0
 - precise-pure function: SimStream::ferror()
-----
checking function SimStream::feof() at streamcluster.cpp:908
 - blockers: 0
 - precise-pure function: SimStream::feof()
-----
checking function SimStream::~SimStream() at streamcluster.cpp:911
 - blockers: 0
 - precise-pure function: SimStream::~SimStream()
-----
checking function SimStream::~SimStream() at streamcluster.cpp:911
 - blockers: 0
 - precise-pure function: SimStream::~SimStream()


ANALYZING LOOP BODIES FOR PERFORABILITY:
-----
loop at streamcluster.cpp:108
within function shuffle(Points*)
for-like loop
blockers: 4
 * streamcluster.cpp:109: call to lrand48()
 * streamcluster.cpp:110: call to llvm.memcpy.p0i8.p0i8.i64()
 * streamcluster.cpp:111: call to llvm.memcpy.p0i8.p0i8.i64()
 * streamcluster.cpp:112: call to llvm.memcpy.p0i8.p0i8.i64()
cannot perforate loop
-----
loop at streamcluster.cpp:121
within function intshuffle(int*, int)
for-like loop
blockers: 3
 * streamcluster.cpp:122: call to lrand48()
 * streamcluster.cpp:124: store to arrayidx3
 * streamcluster.cpp:125: store to arrayidx4
cannot perforate loop
-----
loop at streamcluster.cpp:163
within function pspeedy(Points*, float, long*, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:166: store to assign
cannot perforate loop
-----
loop at streamcluster.cpp:178
within function pspeedy(Points*, float, long*, int, parsec_barrier_t*)
while-like loop
blockers: 1
 * streamcluster.cpp:178: call to pthread_cond_wait()
cannot perforate loop
-----
loop at streamcluster.cpp:182
within function pspeedy(Points*, float, long*, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:188: store to assign77
cannot perforate loop
-----
loop at streamcluster.cpp:198
within function pspeedy(Points*, float, long*, int, parsec_barrier_t*)
for-like loop
blockers: 8
 * streamcluster.cpp:199: call to lrand48()
 * streamcluster.cpp:201: store to intermediate:  store i64 %inc102, i64* %87, align 8, !dbg !1294, !quals !2
 * streamcluster.cpp:205: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
 * streamcluster.cpp:208: call to pthread_cond_broadcast()
 * streamcluster.cpp:214: store to assign146
 * streamcluster.cpp:218: call to parsec_barrier_wait(parsec_barrier_t*)
 * streamcluster.cpp:220: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
 * streamcluster.cpp:222: call to parsec_barrier_wait(parsec_barrier_t*)
cannot perforate loop
-----
loop at streamcluster.cpp:210
within function pspeedy(Points*, float, long*, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:214: store to assign146
cannot perforate loop
-----
loop at streamcluster.cpp:332
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:334: store to count
cannot perforate loop
-----
loop at streamcluster.cpp:411
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:424: store to number_of_centers_to_close
cannot perforate loop
-----
loop at streamcluster.cpp:454
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:461: store to assign265
cannot perforate loop
-----
loop at streamcluster.cpp:521
within function pFL(Points*, int*, int, float, long*, double, long, float, int, parsec_barrier_t*)
while-like loop
blockers: 4
 * streamcluster.cpp:527: call to intshuffle(int*, int)
 * streamcluster.cpp:530: call to parsec_barrier_wait(parsec_barrier_t*)
 * streamcluster.cpp:537: call to pgain(long, Points*, double, long*, int, parsec_barrier_t*)
 * streamcluster.cpp:542: call to parsec_barrier_wait(parsec_barrier_t*)
cannot perforate loop
-----
loop at streamcluster.cpp:535
within function pFL(Points*, int*, int, float, long*, double, long, float, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:537: call to pgain(long, Points*, double, long*, int, parsec_barrier_t*)
cannot perforate loop
-----
loop at streamcluster.cpp:579
within function selectfeasible_fast(Points*, int**, int, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:580: store to arrayidx
cannot perforate loop
-----
loop at streamcluster.cpp:592
within function selectfeasible_fast(Points*, int**, int, int, parsec_barrier_t*)
for-like loop
blockers: 3
 * streamcluster.cpp:593: call to lrand48()
 * streamcluster.cpp:598: store to arrayidx64
 * streamcluster.cpp:610: store to arrayidx77
cannot perforate loop
-----
loop at streamcluster.cpp:601
within function selectfeasible_fast(Points*, int**, int, int, parsec_barrier_t*)
while-like loop
blockers: 2
 * streamcluster.cpp:604: store to r
 * streamcluster.cpp:607: store to l
cannot perforate loop
-----
loop at streamcluster.cpp:669
within function pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
for-like loop
blockers: 1
 * streamcluster.cpp:670: store to assign
cannot perforate loop
-----
loop at streamcluster.cpp:692
within function pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
while-like loop
blockers: 2
 * streamcluster.cpp:694: call to shuffle(Points*)
 * streamcluster.cpp:695: call to pspeedy(Points*, float, long*, int, parsec_barrier_t*)
cannot perforate loop
-----
loop at streamcluster.cpp:802
within function copycenters(Points*, Points*, long*, long)
for-like loop
blockers: 1
 * streamcluster.cpp:803: store to arrayidx2
cannot perforate loop
-----
loop at streamcluster.cpp:809
within function copycenters(Points*, Points*, long*, long)
for-like loop
blockers: 2
 * streamcluster.cpp:813: store to arrayidx19
 * streamcluster.cpp:814: store to k
cannot perforate loop
-----
loop at streamcluster.cpp:850
within function localSearch(Points*, long, long, long*)
for-like loop
blockers: 7
 * streamcluster.cpp:851: store to points3
 * streamcluster.cpp:852: store to kmin6
 * streamcluster.cpp:853: store to kmax9
 * streamcluster.cpp:854: store to pid
 * streamcluster.cpp:855: store to kfinal14
 * streamcluster.cpp:857: store to barrier17
 * streamcluster.cpp:859: call to pthread_create()
cannot perforate loop
-----
loop at streamcluster.cpp:866
within function localSearch(Points*, long, long, long*)
for-like loop
blockers: 1
 * streamcluster.cpp:867: call to pthread_join()
cannot perforate loop
-----
loop at streamcluster.cpp:897
within function SimStream::read(float*, int, int)
for-like loop
blockers: 1
 * streamcluster.cpp:898: call to lrand48()
cannot perforate loop
-----
loop at streamcluster.cpp:950
within function outcenterIDs(Points*, long*, char*)
for-like loop
blockers: 1
 * streamcluster.cpp:951: store to arrayidx5
cannot perforate loop
-----
loop at streamcluster.cpp:954
within function outcenterIDs(Points*, long*, char*)
for-like loop
blockers: 4
 * streamcluster.cpp:956: call to fprintf()
 * streamcluster.cpp:957: call to fprintf()
 * streamcluster.cpp:959: call to fprintf()
 * streamcluster.cpp:961: call to fprintf()
cannot perforate loop
-----
loop at streamcluster.cpp:958
within function outcenterIDs(Points*, long*, char*)
for-like loop
blockers: 1
 * streamcluster.cpp:959: call to fprintf()
cannot perforate loop
-----
loop at streamcluster.cpp:987
within function streamCluster(PStream*, long, long, int, long, long, char*)
for-like loop
blockers: 1
 * streamcluster.cpp:988: store to coord
cannot perforate loop
-----
loop at streamcluster.cpp:997
within function streamCluster(PStream*, long, long, int, long, long, char*)
for-like loop
blockers: 1
 * streamcluster.cpp:998: store to coord36
cannot perforate loop
----------
loop at parsec_barrier.cpp:151
within function parsec_barrier_wait(parsec_barrier_t*)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at parsec_barrier.cpp:152
within function parsec_barrier_wait(parsec_barrier_t*)
empty body
-----
loop at parsec_barrier.cpp:156
within function parsec_barrier_wait(parsec_barrier_t*)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at parsec_barrier.cpp:184
within function parsec_barrier_wait(parsec_barrier_t*)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at parsec_barrier.cpp:185
within function parsec_barrier_wait(parsec_barrier_t*)
empty body
-----
loop at parsec_barrier.cpp:189
within function parsec_barrier_wait(parsec_barrier_t*)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at streamcluster.cpp:83
within function isIdentical(float*, float*, int)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at streamcluster.cpp:134
within function dist(Point const&, Point const&, int)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:177
within function pspeedy(Points*, float, long*, int, parsec_barrier_t*)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at streamcluster.cpp:240
within function pspeedy(Points*, float, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:251
within function pspeedy(Points*, float, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:345
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:356
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:376
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:415
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:441
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:464
within function pgain(long, Points*, double, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:587
within function selectfeasible_fast(Points*, int**, int, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:651
within function pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:661
within function pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:686
within function pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at streamcluster.cpp:707
within function pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:718
within function pkmedian(Points*, long, long, long*, int, parsec_barrier_t*)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at streamcluster.cpp:776
within function contcenters(Points*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:781
within function contcenters(Points*)
for-like loop
blockers: 0
can perforate loop
-----
loop at streamcluster.cpp:896
within function SimStream::read(float*, int, int)
for-like loop
contains loop exit
cannot perforate loop
-----
loop at streamcluster.cpp:1006
within function streamCluster(PStream*, long, long, int, long, long, char*)
while-like loop
contains loop exit
cannot perforate loop
-----
loop at streamcluster.cpp:1015
within function streamCluster(PStream*, long, long, int, long, long, char*)
for-like loop
blockers: 0
can perforate loop


ANALYZING CRITICAL SECTIONS FOR PRECISE-PURITY:
-----
lock acquire at streamcluster.cpp:177
blockers: 1
 * streamcluster.cpp:178: call to pthread_cond_wait()
-----
lock acquire at streamcluster.cpp:203
blockers: 1
 * streamcluster.cpp:205: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
-----
barrier at streamcluster.cpp:218
blockers: 1
 * streamcluster.cpp:220: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
-----
lock acquire at streamcluster.cpp:227
blockers: 1
 * streamcluster.cpp:229: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
-----
barrier at streamcluster.cpp:236
blockers: 1
 * streamcluster.cpp:238: store to pspeedy(Points*, float, long*, int, parsec_barrier_t*)::open
-----
barrier at streamcluster.cpp:245
blockers: 1
 * streamcluster.cpp:255: call to free()
-----
barrier at streamcluster.cpp:288
blockers: 9
 * streamcluster.cpp:293: store to k1
 * streamcluster.cpp:294: store to k2
 * streamcluster.cpp:295: store to k2
 * streamcluster.cpp:298: store to number_of_centers_to_close
 * streamcluster.cpp:305: store to stride
 * streamcluster.cpp:309: store to stride
 * streamcluster.cpp:311: store to K
 * streamcluster.cpp:317: call to malloc()
 * streamcluster.cpp:317: store to pgain(long, Points*, double, long*, int, parsec_barrier_t*)::work_mem
-----
barrier at streamcluster.cpp:368
blockers: 1
 * streamcluster.cpp:374: store to gl_lower
-----
barrier at streamcluster.cpp:447
blockers: 2
 * streamcluster.cpp:461: store to assign265
 * streamcluster.cpp:474: store to intermediate:  store i64 %sub303, i64* %247, align 8, !dbg !1402, !quals !2
-----
barrier at streamcluster.cpp:530
blockers: 1
 * streamcluster.cpp:537: call to pgain(long, Points*, double, long*, int, parsec_barrier_t*)
----------
lock acquire at parsec_barrier.cpp:133
no matching sync found
-----
barrier at streamcluster.cpp:143
no matching sync found
-----
barrier at streamcluster.cpp:192
blockers: 0
can elide barrier
-----
barrier at streamcluster.cpp:193
no matching sync found
-----
barrier at streamcluster.cpp:222
no matching sync found
-----
barrier at streamcluster.cpp:258
no matching sync found
-----
barrier at streamcluster.cpp:323
blockers: 0
can elide barrier
-----
barrier at streamcluster.cpp:340
blockers: 0
can elide barrier
-----
barrier at streamcluster.cpp:353
blockers: 0
can elide barrier
-----
barrier at streamcluster.cpp:405
blockers: 0
can elide barrier
-----
barrier at streamcluster.cpp:434
blockers: 0
can elide barrier
-----
barrier at streamcluster.cpp:482
no matching sync found
-----
barrier at streamcluster.cpp:510
no matching sync found
-----
barrier at streamcluster.cpp:542
no matching sync found
-----
barrier at streamcluster.cpp:647
blockers: 0
can elide barrier
-----
barrier at streamcluster.cpp:658
no matching sync found
-----
barrier at streamcluster.cpp:713
no matching sync found
-----
barrier at streamcluster.cpp:752
no matching sync found

